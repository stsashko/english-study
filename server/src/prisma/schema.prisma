// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Word {
  id                    Int                     @id @default(autoincrement())
  name                  String
  translation           String
  transcription         String
  rating                Int                     @default(0)
  lastShow              DateTime                @default(now())
  numberShow            Int                     @default(0)
  numberSuccesses       Int                     @default(0)
  numberFailures        Int                     @default(0)
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @default(now())
  user                  User?                   @relation(fields: [userId], references: [id])
  userId                Int?
  bySentence            Sentence[]
  dictionary            Dictionary[]
  TestQuestion          TestQuestion[]
  TestQuestionGenerated TestQuestionGenerated[]
  TestStatistic         TestStatistic[]
}

model User {
  id              Int               @id @default(autoincrement())
  name            String
  email           String            @unique
  password        String
  image           String            @default("")
  token           String            @default("")
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @default(now())
  byWords         Word[]
  DictionaryGroup DictionaryGroup[]
  dictionary      Dictionary[]
  Test            Test[]
  TestQuestion    TestQuestion[]
  TestStatistic   TestStatistic[]
}

model Sentence {
  id                    Int                     @id @default(autoincrement())
  text                  String
  translation           String
  rating                Int                     @default(0)
  numberShow            Int                     @default(0)
  numberSuccesses       Int                     @default(0)
  numberFailures        Int                     @default(0)
  lastShow              DateTime                @default(now())
  word                  Word?                   @relation(fields: [wordId], references: [id])
  wordId                Int?
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @default(now())
  TestQuestion          TestQuestion[]
  TestQuestionGenerated TestQuestionGenerated[]
  TestStatistic         TestStatistic[]
}

model DictionaryGroup {
  id             Int              @id @default(autoincrement())
  name           String
  user           User?            @relation(fields: [userId], references: [id])
  userId         Int?
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @default(now())
  dictionary     Dictionary[]
  TestDictionary TestDictionary[]
}

model Dictionary {
  id                Int              @id @default(autoincrement())
  word              Word?            @relation(fields: [wordId], references: [id])
  wordId            Int?
  user              User?            @relation(fields: [userId], references: [id])
  userId            Int?
  dictionaryGroup   DictionaryGroup? @relation(fields: [dictionaryGroupId], references: [id])
  dictionaryGroupId Int?
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @default(now())
}

model Test {
  id                    Int                     @id @default(autoincrement())
  user                  User?                   @relation(fields: [userId], references: [id])
  userId                Int?
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @default(now())
  rating                Int                     @default(0)
  completed             Int                     @default(0)
  TestQuestion          TestQuestion[]
  testDictionary        TestDictionary[]
  TestQuestionGenerated TestQuestionGenerated[]
  TestType              TestType[]
}

model TestType {
  id                    Int                     @id @default(autoincrement())
  test                  Test?                   @relation(fields: [testId], references: [id])
  testId                Int?
  type                  String                  @default("")
  rating                Int                     @default(0)
  completed             Int                     @default(0)
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @default(now())
  TestQuestion          TestQuestion[]
  TestQuestionGenerated TestQuestionGenerated[]
}

model TestQuestion {
  id                    Int                     @id @default(autoincrement())
  word                  Word?                   @relation(fields: [wordId], references: [id])
  wordId                Int?
  sentence              Sentence?               @relation(fields: [sentenceId], references: [id])
  sentenceId            Int?
  test                  Test?                   @relation(fields: [testId], references: [id])
  testId                Int?
  rating                Int?                    @default(0)
  completed             Int?                    @default(0)
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @default(now())
  User                  User?                   @relation(fields: [userId], references: [id])
  userId                Int?
  TestQuestionGenerated TestQuestionGenerated[]
  testType              TestType?               @relation(fields: [testTypeId], references: [id])
  testTypeId            Int?
}

model TestDictionary {
  id                Int              @id @default(autoincrement())
  test              Test?            @relation(fields: [testId], references: [id])
  testId            Int?
  dictionaryGroup   DictionaryGroup? @relation(fields: [dictionaryGroupId], references: [id])
  dictionaryGroupId Int?
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @default(now())
}

model TestQuestionGenerated {
  id             Int           @id @default(autoincrement())
  test           Test?         @relation(fields: [testId], references: [id])
  testId         Int?
  testQuestion   TestQuestion? @relation(fields: [questionId], references: [id])
  questionId     Int?
  word           Word?         @relation(fields: [wordId], references: [id])
  wordId         Int?
  sentence       Sentence?     @relation(fields: [sentenceId], references: [id])
  sentenceId     Int?
  answer         Int?          @default(0)
  customerAnswer Int?          @default(0)
  completed      Int?          @default(0)
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @default(now())
  testType       TestType?     @relation(fields: [testTypeId], references: [id])
  testTypeId     Int?
}

model TestStatistic {
  id         Int       @id @default(autoincrement())
  word       Word?     @relation(fields: [wordId], references: [id])
  wordId     Int?
  sentence   Sentence? @relation(fields: [sentenceId], references: [id])
  sentenceId Int?
  User       User?     @relation(fields: [userId], references: [id])
  userId     Int?
  rating     Int?      @default(0)
  createdAt  DateTime
}
